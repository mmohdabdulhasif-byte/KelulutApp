
async function requestNotificationPermission(){ if(!('Notification' in window)) return false; if(Notification.permission==='granted') return true; if(Notification.permission==='denied') return false; const res = await Notification.requestPermission(); return res === 'granted'; }
function showNotification(title, body){ try{ if('serviceWorker' in navigator && navigator.serviceWorker.controller){ navigator.serviceWorker.getRegistration().then(reg=>{ if(reg && reg.showNotification) reg.showNotification(title, {body, icon:'logo.png'}); else new Notification(title, {body, icon:'logo.png'}); }); } else { new Notification(title, {body, icon:'logo.png'}); } }catch(e){ console.warn('notify fail', e); } }
let _reminderInterval = null;
async function scheduleReminders(){ if(_reminderInterval) clearInterval(_reminderInterval); const ok = await requestNotificationPermission(); if(!ok) return; _reminderInterval = setInterval(async ()=>{ const care = await getAll('careLogs'); const now = new Date(); care.forEach(c=>{ if(c.remindAt){ const t = new Date(c.remindAt); const diff = t - now; if(diff>0 && diff<60000 && !c._notified){ showNotification('Ingat Penjagaan: '+(c.colony||''), c.title || 'Sila jalankan penjagaan'); c._notified = true; } } }); }, 60000); }
async function scheduleSingleIfNear(item){ const ok = await requestNotificationPermission(); if(!ok) return; if(!item.remindAt) return; const t = new Date(item.remindAt); const now = new Date(); const diff = t - now; if(diff>0 && diff<24*3600*1000){ setTimeout(()=> showNotification('Ingat Penjagaan: '+(item.colony||''), item.title || 'Sila jalankan penjagaan'), Math.max(0,diff)); } }
